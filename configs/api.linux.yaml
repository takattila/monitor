on_start:
  port: 7070
  routes:
    all: /all
    playground: /play
    model: /model
    cpu: /cpu
    memory: /memory
    processes: /processes
    storages: /storages
    services: /services
    network: /network
    toggle: /toggle/{section}/{status}
    run:
      list: /run/list
      exec: /run/exec/{name}
      stdout: /run/stdout/{name}
    skins: /skins
    logos: /logos
  logger:
    level: debug
    color: on
on_runtime:
  # physical_memory: 1GB
  memory:
      - bash
      - -c
      - | 
        total=$(free -m | awk '/Mem:/ {print $2}'); \
        used=$(free -m | awk '/Mem:/ {print $3}'); \
        free=$(free -m | awk '/Mem:/ {print $4}'); \
        available=$(free -m | awk '/Mem:/ {print $7}'); \
        cached=$(vmstat -s | grep "cached memory" | awk '{print int($1/1024)}'); \
        cached=${cached:-0}; \
        swap_total=$(free -m | awk '/Swap:/ {print $2}'); \
        swap_used=$(free -m | awk '/Swap:/ {print $3}'); \
        video_wait=$(vmstat 1 2 | tail -1 | awk '{print $16}'); \
        used_pct=$((total>0 ? 100*used/total : 0)); \
        free_pct=$((total>0 ? 100*free/total : 0)); \
        cached_pct=$((total>0 ? 100*cached/total : 0)); \
        avail_pct=$((total>0 ? 100*available/total : 0)); \
        swap_pct=$((swap_total>0 ? 100*swap_used/swap_total : 0)); \
        \
        echo "{\"memory_info\": {\"total\": {\"total\": $total, \"total_unit\": \"MB\", \"actual\": $total, \"actual_unit\": \"MB\", \"percent\": 100}, \"used\": {\"total\": $total, \"total_unit\": \"MB\", \"actual\": $used, \"actual_unit\": \"MB\", \"percent\": $used_pct}, \"free\": {\"total\": $total, \"total_unit\": \"MB\", \"actual\": $free, \"actual_unit\": \"MB\", \"percent\": $free_pct}, \"cached\": {\"total\": $total, \"total_unit\": \"MB\", \"actual\": ${cached:-0}, \"actual_unit\": \"MB\", \"percent\": $cached_pct}, \"available\": {\"total\": $total, \"total_unit\": \"MB\", \"actual\": $available, \"actual_unit\": \"MB\", \"percent\": $avail_pct}, \"swap\": {\"total\": $swap_total, \"total_unit\": \"MB\", \"actual\": $swap_used, \"actual_unit\": \"MB\", \"percent\": $swap_pct}, \"video\": {\"total\": 100, \"total_unit\": \"%\", \"actual\": $video_wait, \"actual_unit\": \"%\", \"percent\": $video_wait}}}"
  commands:
    # cpu_temp:
    #   - bash
    #   - -c
    #   - |
    #     cat /sys/class/thermal/thermal_zone*/temp \
    #     | column -s $'\t' -t \
    #     | sed 's/\(.\)..$/.\1/'
    model_name:
      - bash
      - -c
      - | 
        hostnamectl \
          | grep Operating \
          | awk -F: '{print $2}' \
          | xargs
    processes:
      - bash
      - -c
      - |
        ps -ewwo pid,user,%mem,%cpu,cmd \
          --sort=-%cpu --no-headers \
          | head -n 10 \
          | tail -n 10
    service_is_active:
      - bash
      - -c
      - systemctl is-active {service} || true
    service_is_enabled:
      - bash
      - -c
      - systemctl is-enabled {service} || true
    storage:
      - bash
      - -c
      - |
        df -B1 \
          | grep -v tmpfs \
          | grep -v none \
          | grep -v snap \
          | awk '(NR>1)' \
          | sort -k 6
  services_list:
    - monitor-api
    - monitor-web
    - smbd
    - sshd
    - syslog
  run:
    ping_10_localhost:
      - ping -c 10 localhost
    ping_50_localhost:
      - ping -c 50 localhost
    find_pi:
      - |
        dash -c 'find /home/pi /usr -name pi'
    get_storages:
      - |
        df -B1 \
          | grep -v tmpfs \
          | grep -v none \
          | grep -v snap \
          | awk '(NR>1)' \
          | sort -k 6
    list_media:
      - |
        for f in $(ls -d /media/*); do 
          echo "- Content of $f:";
          echo "$(for d in $(ls -d $f/* 2>/dev/null); do echo "  - $d"; done)";
        done
    processes:
      - dash
      - -c
      - |
        "
          ps -ewwo pid,user,%mem,%cpu,cmd \
            --sort=-%cpu --no-headers \
            | head -n 10 \
            | tail -n 10
        " 
    services:
      - systemctl list-units --type=service